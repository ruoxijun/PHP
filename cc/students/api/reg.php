<?php
// 邮编
$str = "402160";
// $res=1: 校验通过(能够通过正则表达式的匹配)；
// $res=0: 校验失败
$res = preg_match('/^\d{6}$/', $str);
// var_dump($res);


// 身份证号码
// []：表示允许的字符列表
// [^]：表示不允许的字符列表
// {n}: 量词，表示前面匹配字符的数量
// {n, m}: 量词，表示前面匹配字符的数量,≥n && ≤m
// {n,}: 量词，表示前面匹配字符的数量,≥n
// ?: 0或1
// +: ≥1
// *：≥0

$str = "50011820030228123x";
// $res = preg_match('/^[1-9]\d{16}[xX\d]$/', $str);
$res = preg_match('/^[1-9]\d{5}(\d{4})(\d{2})(\d{2})\d{3}[xX\d]$/', $str, $match);
// var_dump($res);
// echo "<hr>";
// var_dump($match);
// echo "<hr>";
$birthday =  $match[1] . '-' . $match[2] . '-' . $match[3];
$res = preg_match('/^((((1[6-9]|[2-9]\d)\d{2})-(0?[13578]|1[02])-(0?[1-9]|[12]\d|3[01]))|(((1[6-9]|[2-9]\d)\d{2})-(0?[13456789]|1[012])-(0?[1-9]|[12]\d|30))|(((1[6-9]|[2-9]\d)\d{2})-0?2-(0?[1-9]|1\d|2[0-8]))|(((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))-0?2-29-))$/', $birthday);
// var_dump($res);

$str = "abcdfoo1234foo7890";
$res = preg_match_all('/foo/', $str, $matchs);
var_dump($res);
echo "<hr>";
var_dump($matchs);